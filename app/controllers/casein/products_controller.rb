# Scaffolding generated by Casein v5.1.1.5

module Casein
  class ProductsController < Casein::CaseinController

    ## optional filters for defining usage according to Casein::AdminUser access_levels
    before_filter :needs_admin, :except => [:index]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]

    def index
      @casein_page_title = t('menu.products')
      @products = Product.order(sort_order(:name)).paginate :page => params[:page]
    end

    def show
      @casein_page_title = t('action.view_product')
      @product = Product.find params[:id]
    end

    def new
      @casein_page_title = t('menu.new_product')
      @product = Product.new
    end

    def create
      @product = Product.new product_params

      if @product.save
        flash[:notice] = t('message.create_product_success')
        redirect_to casein_products_path
      else
        flash.now[:warning] = t('message.create_product_fail')
        render :action => :new
      end
    end

    def update
      @casein_page_title = 'Update product'

      @product = Product.find params[:id]

      if @product.update_attributes product_params
        flash[:notice] = t('message.update_product_success')
        redirect_to casein_products_path
      else
        flash.now[:warning] = t('message.update_product_fail')
        render :action => :show
      end
    end

    def destroy
      @product = Product.find params[:id]

      @product.destroy
      flash[:notice] = t('message.delete_product_success')
      redirect_to casein_products_path
    end

    private

    def product_params
      params.require(:product).permit(:name, :description, :link, :category)
    end

  end
end